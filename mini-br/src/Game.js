import React from "react";
import { Button } from '@material-ui/core';
import './Game.css';
import Grid from './Grid.js';
import DataGame from './DataObject/DataGame'
import DataGrid from './DataObject/DataGrid'
import DataCell from './DataObject/DataCell'

class Game extends React.Component {


    CELLS = [
        [new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true })],
        [new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isLootWeapon: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isLootWeapon: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isLoot: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isLootWeapon: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true })],
        [new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isObstacle: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isObstacle: true }), new DataCell({}), new DataCell({}), new DataCell({ isObstacle: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isObstacle: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isObstacle: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true })],
        [new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isObstacle: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isObstacle: true }), new DataCell({ isLootArmor: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isObstacle: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true })],
        [new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({}), new DataCell({}), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isObstacle: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isObstacle: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({}), new DataCell({}), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true })],
        [new DataCell({ isObstacle: true }), new DataCell({ isLootWeapon: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isLoot: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isObstacle: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isLootWeapon: true }), new DataCell({ isObstacle: true })],
        [new DataCell({ isObstacle: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isLootArmor: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isLootArmor: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isObstacle: true })],
        [new DataCell({ isObstacle: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isObstacle: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isObstacle: true })],
        [new DataCell({ isObstacle: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isObstacle: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isLoot: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isObstacle: true })],
        [new DataCell({ isObstacle: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isObstacle: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isLootWeapon: true }), new DataCell({ isObstacle: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isObstacle: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isLootArmor: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isObstacle: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isObstacle: true })],
        [new DataCell({ isObstacle: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isObstacle: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isObstacle: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isObstacle: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isLootArmor: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isObstacle: true })],
        [new DataCell({ isObstacle: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({}), new DataCell({}), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isObstacle: true })],
        [new DataCell({ isObstacle: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isObstacle: true }), new DataCell({ isLootArmor: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isLootWeapon: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isObstacle: true })],
        [new DataCell({ isObstacle: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isObstacle: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isObstacle: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isObstacle: true })],
        [new DataCell({ isObstacle: true }), new DataCell({ isLootWeapon: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isLoot: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isObstacle: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isLoot: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isLootWeapon: true }), new DataCell({ isObstacle: true })],
        [new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({}), new DataCell({}), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({}), new DataCell({}), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true })],
        [new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isObstacle: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isObstacle: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isObstacle: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isObstacle: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isObstacle: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isObstacle: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true })],
        [new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isObstacle: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isLootArmor: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isLoot: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isLootArmor: true }), new DataCell({ isObstacle: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isObstacle: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true })],
        [new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isLootWeapon: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isLootWeapon: true }), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({}), new DataCell({ isLootWeapon: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true })],
        [new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true }), new DataCell({ isObstacle: true })],
    ];


    constructor(props) {
        super(props);
        let tmpGameId = props.match.params.gameId;
        let tmpGameName = props.match.params.gameName;

        this.state = {
            gameName: tmpGameName,
            gameId: tmpGameId,
            dataGrid: new DataGrid(tmpGameId, { cells: this.CELLS }),
            dataGame: new DataGame(tmpGameId, tmpGameName, { grid: this.dataGrid })
        }
    }

    render() {
        return (
            <div className="Game">
                <div className="Game-TopBar">
                    <div className="GameName">
                        <div className="Name">{this.state.gameName != null ? this.state.gameName : "Nom de la partie"}</div>
                    </div>
                    <div className="RightPanel">
                        <Button className="ShowPlayers">Joueurs</Button>
                        <Button href="/" className="GoBack">Retour</Button>
                    </div>
                </div>
                <div className="Game-Playground">
                    <Grid dataGrid={this.state.dataGrid}></Grid>
                </div>
            </div>
        );
    }
}

export default Game;
